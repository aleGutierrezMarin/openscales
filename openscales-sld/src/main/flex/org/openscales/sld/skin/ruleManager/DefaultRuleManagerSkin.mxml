<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:ui="org.openscales.sld.ui.*"
		addedToStage="onAdded()"
		creationComplete="onCreated()"
		>
	<fx:Metadata>
		[HostComponent("org.openscales.sld.ui.RuleManager")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import org.openscales.sld.events.SLDEvent;
			
			import mx.managers.PopUpManager;
			
			private var created:Boolean = false;
			
			private function validate():void {
				this.hostComponent.rule.name = this.ruleName.text;
				this.hostComponent.rule.title = this.title.text;
				this.hostComponent.rule.abstract = this.abstract.text;
				if(this.minScale.text!="")
					this.hostComponent.rule.minScaleDenominator = Number(this.minScale.text);
				if(this.maxScale.text!="")
					this.hostComponent.rule.maxScaleDenominator = Number(this.maxScale.text);
				this.hostComponent.rule.dispatchEvent(new SLDEvent(SLDEvent.RULE_UPDATED,this.hostComponent.rule,null,true));
				this.hostComponent.rule = null;
				PopUpManager.removePopUp(this.hostComponent);
			}
			
			private function onCreated():void {
				created = true;
				onAdded();
			}
			
			private function onAdded():void {
				if(!created || !this.hostComponent.rule)
					return;
				this.ruleName.text = this.hostComponent.rule.name;
				this.title.text = this.hostComponent.rule.title;
				this.abstract.text = this.hostComponent.rule.abstract;
				if(!isNaN(this.hostComponent.rule.minScaleDenominator))
					this.minScale.text = this.hostComponent.rule.minScaleDenominator.toString();
				else
					this.minScale.text = "";
				if(!isNaN(this.hostComponent.rule.maxScaleDenominator))
					this.maxScale.text = this.hostComponent.rule.maxScaleDenominator.toString();
				else
					this.maxScale.text = "";
			}
		]]>
	</fx:Script>
	
	<s:Group width="100%"
			 height="100%">
		<s:Rect width="100%"
				height="100%">
			<s:fill>
				<s:SolidColor color="#CCCCCC" />
			</s:fill>
		</s:Rect>
	</s:Group>
	<s:Group top="10" right="10" bottom="10" left="10">
		<s:layout>
			<s:VerticalLayout />
		</s:layout>
		<s:Label text="Paramétrage basiques"
				 fontWeight="bold"/>
		<s:HGroup verticalAlign="middle">
			<s:Spacer width="5" />
			<s:Label text="Nom :" width="110"/>
			<s:TextInput id="ruleName" />
		</s:HGroup>
		<s:HGroup verticalAlign="middle">
			<s:Spacer width="5" />
			<s:Label text="Titre :" width="110"/>
			<s:TextInput id="title" />
		</s:HGroup>
		<s:HGroup verticalAlign="top">
			<s:Spacer width="5" />
			<s:Label text="Résumé :" width="110"/>
			<s:TextArea id="abstract" />
		</s:HGroup>
		<s:Spacer height="10" />
		<s:Label text="Echelles d'affichage"
				 fontWeight="bold"/>
		<s:HGroup verticalAlign="middle">
			<s:Spacer width="5" />
			<s:Label text="Echèle min : 1/" width="110"/>
			<s:TextInput id="minScale" restrict="0-9"/>
		</s:HGroup>
		<s:HGroup verticalAlign="middle">
			<s:Spacer width="5" />
			<s:Label text="Echèle max : 1/" width="110"/>
			<s:TextInput id="maxScale" restrict="0-9"/>
		</s:HGroup>
		<s:Spacer height="10" />
		<s:Label text="Filtre"
				 fontWeight="bold"/>
		
		<s:Spacer height="10" />
		<s:Group width="100%">
			<s:layout>
				<s:HorizontalLayout horizontalAlign="right"/>
			</s:layout>
			<s:Button label="Valider"
					  click="validate()"
					  />
			<s:Button label="Annuler"
					  click="{PopUpManager.removePopUp(this.hostComponent);}"/>
		</s:Group>
	</s:Group>
	
	
	
</s:Skin>
