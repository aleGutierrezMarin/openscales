<?xml version="1.0" encoding="utf-8"?>
<!--- FeatureInfoDisplay Flex control, used to change layer order or visbility -->
<Control xmlns="http://openscales.org"
		 xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 width="250" height="200" xmlns:measure="org.openscales.fx.control.measure.*">
	
	
	<fx:Script>
		<![CDATA[
			import org.openscales.core.Map;
			import org.openscales.core.events.DrawingEvent;
			import org.openscales.core.events.MeasureEvent;
			import org.openscales.core.handler.feature.draw.DrawPathHandler;
			import org.openscales.core.layer.VectorLayer;
			import org.openscales.core.measure.Distance;
			import org.openscales.fx.FxMap;
			import org.openscales.geometry.basetypes.Pixel;
			import org.openscales.geometry.basetypes.Unit;
			
			[Bindable]
			[Embed(source="/assets/images/icons/Icons-12.png")]
			private var _btnPath:Class;
			
			override public function set map(value:Map):void{
				super.map = value;
				pathMeasure.map = this.map;
				azimuthMeasure.map = this.map;
				surfaceMeasure.map = this.map;
			}
			
			private function exitMeasureMode():void {
				if(this.map) {
					var evt:DrawingEvent = new DrawingEvent(DrawingEvent.CHANGE_ACTIVE_HANDLER);
					evt.activeHandler = null;
					this.map.dispatchEvent(evt);
				}
			}
			
			/**
			 * @inherit
			 */
			override public function activate():void 
			{
				super.activate();
				if(this._map)
				{
					this.map.addEventListener(MeasureEvent.MEASURE_AVAILABLE,onMeasure);
					this.map.addEventListener(MeasureEvent.MEASURE_UNAVAILABLE,onMeasure);
					this.map.addEventListener(DrawingEvent.CHANGE_ACTIVE_HANDLER, onChangeActiveHandler);
				}
			}
			
			/**
			 * @inherit
			 */
			override public function desactivate():void 
			{	
				super.desactivate();
				if(this._map)
				{
					this.map.removeEventListener(MeasureEvent.MEASURE_AVAILABLE,onMeasure);
					this.map.removeEventListener(MeasureEvent.MEASURE_UNAVAILABLE,onMeasure);
					this.map.removeEventListener(DrawingEvent.CHANGE_ACTIVE_HANDLER, onChangeActiveHandler);
				}
			}
			
			private function onMeasure(event:MeasureEvent):void{
				if(event.type == MeasureEvent.MEASURE_AVAILABLE) {
					if(event.tool.getUnits()){
						lblResult.text = event.tool.getMeasure()+" "+event.tool.getUnits();
					}else
					{
						lblResult.text = event.tool.getMeasure();
					}
					
				} else if(event.type == MeasureEvent.MEASURE_UNAVAILABLE) {
					lblResult.text = "N/A";
				}
			}
			
			private function onChangeActiveHandler(event:DrawingEvent):void {
				lblResult.text = "N/A";
			}
		]]>
	</fx:Script>
	
	<s:Panel title="Drawing Tools" x="10" y="10" height="70" >
		<s:layout>
			<s:HorizontalLayout paddingTop="1" paddingRight="1" paddingBottom="1" paddingLeft="1"
								horizontalAlign="center" verticalAlign="middle"/>
			
		</s:layout>
		
		<MeasurePath id="pathMeasure" />
		<measure:MeasureAzimuth id="azimuthMeasure" />
		<MeasureSurface id="surfaceMeasure" />
		<!-- <s:Button id="altimetricMeasure" label="Altitude"/> -->
		<!-- <s:Button id="profileMeasure" label="Profile "/> -->
		<IconButton icon="{_btnPath}" id="exit" click="exitMeasureMode()" width="25" height="25" toolTip="Disactivate measure tools"/>
		
		<s:Label id="lblResult" text="N/A" />
	</s:Panel>
	
</Control>