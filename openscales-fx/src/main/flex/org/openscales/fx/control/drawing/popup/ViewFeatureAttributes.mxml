<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   creationComplete="init();"
			   removedFromStage="destroy();"
			   close="close();">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.core.FlexGlobals;
			import mx.core.LayoutDirection;
			import mx.managers.PopUpManager;
			
			import org.openscales.core.Map;
			import org.openscales.core.events.I18NEvent;
			import org.openscales.core.feature.Feature;
			import org.openscales.core.i18n.Catalog;
			
			import spark.components.Application;
			import spark.components.HGroup;
			import spark.components.Label;
			import spark.components.VGroup;
			import spark.layouts.HorizontalLayout;
			
			private var _init:Boolean = false;
			private var _feature:Feature = null;
			private var _vgroup:VGroup = null;
			
			private static var DEFAULT_W:Number = 250;
			private static var DEFAULT_H:Number = 200;
			
			/**
			 * feature associated to the popup
			 */
			public function get feature():Feature
			{
				return _feature;
			}
			/**
			 * @private
			 */
			public function set feature(value:Feature):void
			{
				if(this._feature) {
					if(this._feature.layer && this._feature.layer.map)
						this._feature.layer.map.removeEventListener(I18NEvent.LOCALE_CHANGED,this.localize);
					if(_vgroup)
						_vgroup.removeAllElements();
					if(this._init)
						PopUpManager.removePopUp(this);
				}
				_feature = value;
				if(this._feature) {
					PopUpManager.addPopUp(this, (FlexGlobals.topLevelApplication as Application), true);
					if(this._init) {
						if(this._feature.layer && this._feature.layer.map)
							this._feature.layer.map.addEventListener(I18NEvent.LOCALE_CHANGED,this.localize);
						if(this._feature.layer.attributesId.length > 0) {
							for(var i:uint = this._feature.layer.attributesId.length;i>0;--i) {
								if(!_vgroup) {
									_vgroup = new VGroup();
									_vgroup.gap = 10;
									_vgroup.top = 5;
									container.addElement(_vgroup);
								}
								var key:String = this._feature.layer.attributesId[i-1];
								var group:HGroup = new HGroup();
								group.gap = 10;
								_vgroup.addElement(group);
								var lb:Label = new Label();
								lb.width = 100;
								lb.text = key;
								group.addElement(lb);
								lb = new Label();
								lb.width = 90;
								if(this._feature.attributes[key])
									lb.text = this._feature.attributes[key];
								else
									lb.text = "";
								group.addElement(lb);
								_vgroup.addElement(group);
							}
						}
						this.localize();
					}
				}
			}
			
			private function init():void {
				this.x = (parent.width-this.width)/2;
				this.y = (parent.height-this.height)/2;
				this.resize(null);
				parent.addEventListener(Event.RESIZE,this.resize);
				if(!this._init) {
					this._init = true;
					this.feature = this.feature;
				}
			}
			private function resize(e:Event):void {
				this.x = (parent.width-this.width)/2;
				this.y = (parent.height-this.height)/2;
				this.width = DEFAULT_W;
				this.height = DEFAULT_H;
				if(this.width > parent.width) {
					this.width = parent.width;
				}
				if(this.height > parent.height) {
					this.height = parent.height;
				}
			}
			private function destroy():void {
				if(parent)
					parent.removeEventListener(Event.RESIZE,this.resize);
				this.feature = null;
			}
			
			private function localize(e:I18NEvent=null):void {
				this.title = Catalog.getLocalizationForKey("viewfeatureattributes.title");
			}
			
			private function close():void
			{
				this.feature = null;
			}
			
		]]>
	</fx:Script>
	<s:Scroller width="100%" height="100%">
		<s:Group id="container" width="100%" height="100%">
		</s:Group>
	</s:Scroller>
</s:TitleWindow>
