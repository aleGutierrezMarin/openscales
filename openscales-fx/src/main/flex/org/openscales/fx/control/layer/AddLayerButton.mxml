<?xml version="1.0" encoding="utf-8"?>
<!--
 Button for adding a given layer to a given map
-->
<s:Button xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns="org.openscales.fx.control.layer.*"
		  click="this.addLayerToMap()"
		  label="{Catalog.getLocalizationForKey(I18N_LABEL_KEY)}">
		
	<fx:Script>
		<![CDATA[
			import org.openscales.core.Map;
			import org.openscales.core.events.I18NEvent;
			import org.openscales.core.events.LayerEvent;
			import org.openscales.core.i18n.Catalog;
			import org.openscales.core.layer.Layer;
			
			protected var _map:Map;
			
			protected var _layer:Layer;
			
			public static const I18N_LABEL_KEY:String = 'addLayerButton.label';
			
			/**
			 * The map the layer will be added to
			 */
			public function get map():Map{
				
				return this._map;
			}
			
			public function set map(value:Map):void{
				
				this._map = value;
				
				if(this._map){
					
					this._map.addEventListener(I18NEvent.LOCALE_CHANGED,this.onLocaleChanged);
					this._map.addEventListener(LayerEvent.LAYER_REMOVED,this.onLayerRemoved);
				}
			}
			
			/**
			 * The layer to be added to the map
			 */
			public function get layer():Layer{
				
				return this._layer;
			}
			
			public function set layer(value:Layer):void{
				
				this._layer = value;
				
				if(this._layer){
					
					this.enabled = this._layer.map != this._map;
				}
			}
			
			private function onLayerRemoved(event:LayerEvent):void{
				
				if(event.layer == this._layer){
					
					this.enabled = true;
				}
			}
			
			private function onLocaleChanged(event:I18NEvent):void{
				
				this.label = Catalog.getLocalizationForKey(I18N_LABEL_KEY);
			}
			
			public function addLayerToMap():void{
				
				this._map.addLayer(this._layer);
				this.enabled = false;
			}
		]]>
	</fx:Script>
</s:Button>
