<?xml version="1.0" encoding="utf-8"?>
<!--- 			
The LayerCatalog component displays a catalog of layers that can be filtered.
For example, to present the list of layers available in an application.
--> 
<os:Control xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  xmlns:os="org.openscales.fx.control.*"
					  width="400" height="300">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.IList;
			
			import org.openscales.core.layer.Layer;
			
			private var _layers:Vector.<Layer>;
						
			[Bindable]
			protected var _filteredLayers:ArrayCollection = new ArrayCollection();
			
			/**
			 * The list of layers to be displayed in the catalog
			 */
			public function get layers():Vector.<Layer>{
			
				return this._layers;
			}
			
			public function set layers(value:Vector.<Layer>):void{
			
				this._layers = value;
				this._filteredLayers.removeAll();
				for each(var layer:Layer in this._layers){
					this._filteredLayers.addItem(layer);
				}
				
			}
			
			/**
			 * List of the layers matching the filter
			 */
			public function get filteredLayers():IList/* of Layer*/{
				
				return this._filteredLayers;
			}
			
			/**
			 * The function that will be used to filter the layers.
			 * This function must take a layer as parameter and return a Boolean
			 */
			public function get filter():Function{
				
				return this._filteredLayers.filterFunction;
			}
			
			public function set filter(value:Function):void{
			
				this._filteredLayers.filterFunction = value;
				this._filteredLayers.refresh();
			}
		]]>
	</fx:Script>
	
	<s:List id="layerList" dataProvider="{this._filteredLayers}">
		
	</s:List>
</os:Control>
