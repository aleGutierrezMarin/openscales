<?xml version="1.0" encoding="utf-8"?>
<!--- Pan control to pan the map --> 
<Control xmlns="http://openscales.org" xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:fx="http://ns.adobe.com/mxml/2009"
		 width="400" height="300" initialize="configure()" > 
	
	<fx:Script>
		<![CDATA[
			
			import mx.controls.sliderClasses.Slider;
			import mx.events.SliderEvent;
			import mx.events.SliderEventClickTarget;
			import mx.events.StateChangeEvent;
			
			import org.openscales.core.Map;
			import org.openscales.core.control.ZoomData;
			import org.openscales.core.events.LayerEvent;
			import org.openscales.core.events.MapEvent;
			import org.openscales.fx.control.skin.PanSkin;
			import org.openscales.fx.control.skin.ZoomSkin;
			import org.openscales.fx.control.skin.ZoomThumbSkin;
			
			import spark.events.TrackBaseEvent;
			
			
			public var DELTA_PX:Number = 100;
			
			
			/**
			 * Configure the listener for the pan and the zoom
			 * Configure the list of zoom label once the component is created 
			 * and set the first zoomLabel text value.
			 */
			public function  configure():void{ 
				this.panSkin.skin.addEventListener(StateChangeEvent.CURRENT_STATE_CHANGE,this.onPan);
			}
			
			/**
			 * Pan the map when a pan button is pressed 
			 * 
			 * @param The event received
			 */
			public function onPan(event:StateChangeEvent):void
			{
				switch(event.newState)
				{
					case "south" :
						this.map.pan(0, this.DELTA_PX, true);
						break;
					case "east" :
						this.map.pan(this.DELTA_PX, 0, true);
						break;
					case "north" :
						this.map.pan(0, -this.DELTA_PX, true);		
						break;
					case "west":
						this.map.pan(-this.DELTA_PX, 0, true);
						break;
					default : 
				}
				
			}
			
			
			override public function destroy():void {
				this.active = false;
				super.destroy();
			}
			
			
		]]>
	</fx:Script>
	
	<s:SkinnableContainer id="panSkin"
						  skinClass="org.openscales.fx.control.skin.PanSkin"
						  useHandCursor="true"
						  buttonMode="true">
	</s:SkinnableContainer>
</Control>